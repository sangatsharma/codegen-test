/**
 * Generated by @openapi-codegen
 *
 * @version 1.0
 */
export type CreateVacancyRequestDto = {
  /**
   * image of the vacany
   *
   * @format binary
   */
  image: Blob;
  /**
   * @minLength 1
   * @maxLength 50
   */
  name: string;
  designationId: string;
  jobLevel: string;
  salary: string;
  skills: string;
  experience: number;
  jobType: "Full Time" | "Part Time" | "Internship" | "Freelance" | "Remote";
  /**
   * @format date-time
   */
  deadLine: string;
  vacancyOpening: number;
  /**
   * @minLength 10
   * @maxLength 200
   */
  description: string;
  status: "Archive" | "Active";
};

export type MessageResponseWithIdDTO = {
  message: string;
  data: {
    id?: string;
  };
};

export type DesignationDTO = {
  id: string;
  name: string;
  department: {
    id?: string;
    name?: string;
  };
};

export type AssetDTO = {
  id: string;
  name: string;
  url: string;
};

export type ListVacancyDTO = {
  id: string;
  name: string;
  /**
   * @format date-time
   */
  createdAt: string;
  designation: DesignationDTO;
  jobLevel: string;
  salary: string;
  skills: string;
  experience: number;
  jobType: "Full Time" | "Part Time" | "Internship" | "Freelance" | "Remote";
  /**
   * @format date-time
   */
  datePosted: string;
  /**
   * @format date-time
   */
  deadline: string;
  vacancy: number;
  status: "Archive" | "Active";
  description: string;
  image: AssetDTO;
  applicant: number;
};

export type PaginationResponseDTO = {
  previousPage?: number | null;
  nextPage?: number | null;
  total: number;
  count: number;
};

export type ListVacanciesReponseDto = {
  message: string;
  data: ListVacancyDTO[];
  pagination: PaginationResponseDTO;
};

export type GetVacancyResponseDto = {
  message: string;
  data: {
    id?: string;
    name?: string;
    /**
     * @format date-time
     */
    createdAt?: string;
    designation?: {
      id?: string;
      name?: string;
    };
    jobLevel?: string;
    salary?: string;
    skills?: string;
    experience?: number;
    jobType?: "Full Time" | "Part Time" | "Internship" | "Freelance" | "Remote";
    /**
     * @format date-time
     */
    datePosted?: string;
    /**
     * @format date-time
     */
    deadline?: string;
    vacancy?: number;
    status?: "Archive" | "Active";
    description?: string;
    image?: AssetDTO;
  };
};

export type UpdateVacancyRequestDto = {
  /**
   * @minLength 1
   * @maxLength 50
   */
  name?: string;
  designationid?: string;
  jobLevel?: string;
  salary?: string;
  /**
   * @minLength 10
   * @maxLength 200
   */
  skills?: string;
  experience?: number;
  jobType?: "Full Time" | "Part Time" | "Internship" | "Freelance" | "Remote";
  /**
   * @format date-time
   */
  deadline?: string;
  vacancyOpening?: number;
  /**
   * @minLength 10
   * @maxLength 200
   */
  description?: string;
  status?: "Archive" | "Active";
  /**
   * image of the vacany
   *
   * @format binary
   */
  image?: Blob;
};

export type MessageResponseDTO = {
  message: string;
};

export type CreateApplicantDto = {
  /**
   * The cv of the applicant
   *
   * @format binary
   */
  cv: Blob;
  githubUrl?: string;
  portfolioUrl?: string;
  referralSource?: string;
  expectedSalary?: number;
  name: string;
  email: string;
  phone: string;
  address: string;
  workExperience: string;
  position: string;
  vacancyId: string;
};

export type ListApplicationDTO = {
  id: string;
  /**
   * @format date-time
   */
  createdAt: string;
  name: string;
  email: string;
  phoneNumber: string;
  address: string;
  githubUrl: string | null;
  portfolioUrl: string | null;
  cv: AssetDTO;
  referralSource: string | null;
  workExperience: string;
  position: string;
  vacancyId: string;
  status: "Processing" | "Interviewed" | "Passed" | "Rejected";
  expectedSalary: number | null;
  vacancy: {
    id?: string;
    name?: string;
    designation?: DesignationDTO;
  };
};

export type ListApplicantsResponseDTO = {
  message: string;
  data: ListApplicationDTO[];
  pagination: PaginationResponseDTO;
};

export type GetMemberDTO = {
  id: string;
  name: string;
};

export type ListCommentDTO = {
  content: string;
  member: GetMemberDTO;
};

export type SingleApplicantResponseDTO = {
  message: string;
  data: {
    id?: string;
    /**
     * @format date-time
     */
    createdAt?: string;
    name?: string;
    email?: string;
    phoneNumber?: string;
    address?: string;
    githubUrl?: string | null;
    portfolioUrl?: string | null;
    cv?: AssetDTO;
    referralSource?: string | null;
    workExperience?: string;
    position?: string;
    vacancyId?: string;
    status?: "Processing" | "Interviewed" | "Passed" | "Rejected";
    expectedSalary?: number | null;
    comments?: ListCommentDTO[];
    vacancy?: {
      id?: string;
      name?: string;
      designation?: DesignationDTO;
    };
  };
};

export type PatchApplicantDto = {
  status?: "Processing" | "Interviewed" | "Passed" | "Rejected";
};

export type CreateCommentDTO = {
  content: string;
  applicantId: string;
};

export type CreateContactDTO = {
  name: string;
  email: string;
  phoneNumber: string;
  message: string;
};

export type ListContactDTO = {
  id: string;
  /**
   * @format date-time
   */
  createdAt: string;
  /**
   * @format date-time
   */
  updatedAt: string;
  name: string;
  email: string;
  phoneNumber: string;
  message: string;
  status: string;
};

export type ListContactResponseDTO = {
  message: string;
  data: ListContactDTO[];
  pagination: PaginationResponseDTO;
};

export type GetContactResponseDTO = {
  message: string;
  data: {
    id?: string;
    /**
     * @format date-time
     */
    createdAt?: string;
    /**
     * @format date-time
     */
    updatedAt?: string;
    name?: string;
    email?: string;
    phoneNumber?: string;
    message?: string;
    status?: string;
  };
};

export type UpdateContactRequestDTO = {
  status?: "Read" | "Unread";
};

export type CreateMemberRequestDTO = {
  /**
   * image of the member
   *
   * @format binary
   */
  image: Blob;
  /**
   * @minLength 1
   * @maxLength 50
   */
  name: string;
  email: string;
  phoneNumber: string;
  /**
   * @minLength 1
   * @maxLength 50
   */
  designation: string;
  role: "Superadmin" | "Admin" | "Member";
};

export type ListMemberDTO = {
  id: string;
  name: string;
  email: string;
  /**
   * @format date-time
   */
  createdAt: string;
  /**
   * @format date-time
   */
  updatedAt: string;
  phoneNumber: string;
  designation: string;
  role: "Superadmin" | "Admin" | "Member";
  image: AssetDTO;
};

export type ListMemberResponseDTO = {
  message: string;
  data: ListMemberDTO[];
  pagination: PaginationResponseDTO;
};

export type UpdateMemberRequestDTO = {
  /**
   * @minLength 1
   * @maxLength 50
   */
  name?: string;
  email?: string;
  phoneNumber?: string;
  /**
   * @minLength 1
   * @maxLength 50
   */
  designation?: string;
  role?: "Superadmin" | "Admin" | "Member";
  /**
   * image of the member
   *
   * @format binary
   */
  image?: Blob;
};

export type MemberLoginDTO = {
  email: string;
};

export type SingleMemberResponseDTO = {
  message: string;
  data: {
    id?: string;
    name?: string;
    email?: string;
    /**
     * @format date-time
     */
    createdAt?: string;
    phoneNumber?: string;
    designation?: string;
    role?: "Superadmin" | "Admin" | "Member";
    image?: AssetDTO;
  };
};

export type MemberVerifyDTO = {
  email: string;
  otp: string;
};

export type VerifyResponseDTO = {
  message: string;
  data: {
    accessToken?: string;
  };
};

export type CreateDepartmentDTO = {
  /**
   * @minLength 1
   * @maxLength 30
   */
  name: string;
};

export type ListDepartmentDTO = {
  id: string;
  name: string;
  /**
   * @format date-time
   */
  createdAt?: string;
};

export type ListDepartmentResponseDTO = {
  message: string;
  data: ListDepartmentDTO[];
  pagination: PaginationResponseDTO;
};

export type SingleDepartmentResponseDTO = {
  message: string;
  data: {
    id?: string;
    name?: string;
    /**
     * @format date-time
     */
    createdAt?: string;
  };
};

export type UpdateDepartmentDTO = {
  /**
   * @minLength 1
   * @maxLength 30
   */
  name?: string;
};

export type CreateDesignationDTO = {
  /**
   * image of the designation
   *
   * @format binary
   */
  image: Blob;
  /**
   * @minLength 1
   * @maxLength 100
   */
  name: string;
  departmentId: string;
  description: string;
};

export type DepartmentDTO = {
  id: string;
  name: string;
};

export type ListDesignationDTO = {
  id: string;
  name: string;
  /**
   * @format date-time
   */
  createdAt: string;
  department: DepartmentDTO;
  image: AssetDTO;
  description: string;
};

export type ListDesignationResponseDTO = {
  message: string;
  data: ListDesignationDTO[];
  pagination: PaginationResponseDTO;
};

export type GetDesignationResponseDTO = {
  message: string;
  data: {
    id?: string;
    name?: string;
    /**
     * @format date-time
     */
    createdAt?: string;
    department?: DepartmentDTO;
    image?: AssetDTO;
    description?: string;
  };
};

export type UpdateDesignationDTO = {
  /**
   * @minLength 1
   * @maxLength 100
   */
  name?: string;
  /**
   * image of the designation
   *
   * @format binary
   */
  image?: Blob;
  description?: string;
};
